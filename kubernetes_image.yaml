apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: greenlight
      name: greenlight
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 80
      selector:
        io.kompose.service: greenlight
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: webrtc-sfu
      name: webrtc-sfu
    spec:
      ports:
        - name: "3008"
          port: 3008
          targetPort: 3008
      selector:
        io.kompose.service: webrtc-sfu
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: apps-akka
      name: apps-akka
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: apps-akka
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: apps-akka
        spec:
          containers:
            - env:
                - name: DOMAIN
                - name: SHARED_SECRET
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-apps-akka:2.4.x
              name: apps-akka
              resources: {}
              volumeMounts:
                - mountPath: /var/freeswitch/meetings
                  name: vol-freeswitch
          restartPolicy: Always
          volumes:
            - name: vol-freeswitch
              persistentVolumeClaim:
                claimName: vol-freeswitch
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: vol-freeswitch
      name: vol-freeswitch
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: bbb-net
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/bbb-net: "true"
      podSelector:
        matchLabels:
          io.kompose.network/bbb-net: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: bbb-web
      name: bbb-web
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: bbb-web
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: bbb-web
        spec:
          containers:
            - env:
                - name: DEV_MODE
                - name: DOMAIN
                - name: ENABLE_LEARNING_DASHBOARD
                  value: "true"
                - name: ENABLE_RECORDING
                  value: "false"
                - name: NUMBER_OF_BACKEND_NODEJS_PROCESSES
                  value: "2"
                - name: SHARED_SECRET
                - name: STUN_SERVER
                  value: 'stun::'
                - name: TURN_SECRET
                - name: TURN_SERVER
                - name: WELCOME_FOOTER
                - name: WELCOME_MESSAGE
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-web:2.4.x
              livenessProbe:
                exec:
                  command:
                    - wget --no-proxy --no-verbose --tries=1 --spider http://10.7.7.2:8090/bigbluebutton/api || exit 1
                initialDelaySeconds: 120
              name: bbb-web
              resources: {}
              volumeMounts:
                - mountPath: /var/bigbluebutton
                  name: bigbluebutton
                - mountPath: /var/freeswitch/meetings
                  name: vol-freeswitch
                - mountPath: /var/kurento
                  name: vol-kurento
          restartPolicy: Always
          volumes:
            - name: bigbluebutton
              persistentVolumeClaim:
                claimName: bigbluebutton
            - name: vol-freeswitch
              persistentVolumeClaim:
                claimName: vol-freeswitch
            - name: vol-kurento
              persistentVolumeClaim:
                claimName: vol-kurento
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: bigbluebutton
      name: bigbluebutton
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: vol-kurento
      name: vol-kurento
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: coturn
      name: coturn
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: coturn
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: coturn
        spec:
          containers:
            - args:
                - --external-ip=/
                - --external-ip=::1/::1
                - --static-auth-secret=
              image: instrumentisto/coturn:4.5
              name: coturn
              resources: {}
              volumeMounts:
                - mountPath: /tmp/cert.pem
                  name: coturn-claim0
                - mountPath: /tmp/key.pem
                  name: coturn-claim1
                - mountPath: /usr/local/bin/docker-entrypoint.sh
                  name: coturn-claim2
                - mountPath: /etc/coturn/turnserver.conf
                  name: coturn-claim3
          restartPolicy: Always
          volumes:
            - name: coturn-claim0
              persistentVolumeClaim:
                claimName: coturn-claim0
            - name: coturn-claim1
              persistentVolumeClaim:
                claimName: coturn-claim1
            - name: coturn-claim2
              persistentVolumeClaim:
                claimName: coturn-claim2
            - name: coturn-claim3
              persistentVolumeClaim:
                claimName: coturn-claim3
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: coturn-claim0
      name: coturn-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: coturn-claim1
      name: coturn-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: coturn-claim2
      name: coturn-claim2
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: coturn-claim3
      name: coturn-claim3
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: etherpad
      name: etherpad
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: etherpad
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: etherpad
        spec:
          containers:
            - env:
                - name: ETHERPAD_API_KEY
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-etherpad:2.4.x
              name: etherpad
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: freeswitch
      name: freeswitch
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: freeswitch
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: freeswitch
        spec:
          containers:
            - env:
                - name: DISABLE_SOUND_ALONE
                  value: "false"
                - name: DISABLE_SOUND_MUTED
                  value: "false"
                - name: DOMAIN
                - name: ESL_PASSWORD
                  value: ClueCon
                - name: EXTERNAL_IPv4
                - name: EXTERNAL_IPv6
                  value: ::1
                - name: SIP_IP_ALLOWLIST
                - name: SOUNDS_LANGUAGE
                  value: en-us-callie
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-freeswitch:2.4.x
              name: freeswitch
              resources: {}
              securityContext:
                capabilities:
                  add:
                    - IPC_LOCK
                    - NET_ADMIN
                    - NET_RAW
                    - NET_BROADCAST
                    - SYS_NICE
                    - SYS_RESOURCE
              volumeMounts:
                - mountPath: /etc/freeswitch/sip_profiles/external
                  name: freeswitch-claim0
                - mountPath: /etc/freeswitch/dialplan/public_docker
                  name: freeswitch-claim1
                - mountPath: /var/freeswitch/meetings
                  name: vol-freeswitch
          restartPolicy: Always
          volumes:
            - name: freeswitch-claim0
              persistentVolumeClaim:
                claimName: freeswitch-claim0
            - name: freeswitch-claim1
              persistentVolumeClaim:
                claimName: freeswitch-claim1
            - name: vol-freeswitch
              persistentVolumeClaim:
                claimName: vol-freeswitch
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: freeswitch-claim0
      name: freeswitch-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: freeswitch-claim1
      name: freeswitch-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: fsesl-akka
      name: fsesl-akka
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: fsesl-akka
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: fsesl-akka
        spec:
          containers:
            - env:
                - name: FSESL_PASSWORD
                  value: ClueCon
              image: fsesl-akka
              name: fsesl-akka
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: greenlight
      name: greenlight
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: greenlight
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: greenlight
        spec:
          containers:
            - env:
                - name: ALLOW_GREENLIGHT_ACCOUNTS
                  valueFrom:
                    configMapKeyRef:
                      key: ALLOW_GREENLIGHT_ACCOUNTS
                      name: env
                - name: AUTO_SHARE_WEBCAM
                  valueFrom:
                    configMapKeyRef:
                      key: AUTO_SHARE_WEBCAM
                      name: env
                - name: BIGBLUEBUTTON_ENDPOINT
                  value: https:///bigbluebutton/api/
                - name: BIGBLUEBUTTON_SECRET
                - name: BREAKOUTROOM_LIMIT
                  valueFrom:
                    configMapKeyRef:
                      key: BREAKOUTROOM_LIMIT
                      name: env
                - name: CHAT_ENABLED
                  valueFrom:
                    configMapKeyRef:
                      key: CHAT_ENABLED
                      name: env
                - name: CHAT_START_CLOSED
                  valueFrom:
                    configMapKeyRef:
                      key: CHAT_START_CLOSED
                      name: env
                - name: CLIENT_TITLE
                  valueFrom:
                    configMapKeyRef:
                      key: CLIENT_TITLE
                      name: env
                - name: DB_ADAPTER
                  value: postgresql
                - name: DB_HOST
                  value: postgres
                - name: DB_NAME
                  value: greenlight
                - name: DB_PASSWORD
                  value: password
                - name: DB_USERNAME
                  value: postgres
                - name: DEFAULT_PRESENTATION
                  valueFrom:
                    configMapKeyRef:
                      key: DEFAULT_PRESENTATION
                      name: env
                - name: DEFAULT_REGISTRATION
                  valueFrom:
                    configMapKeyRef:
                      key: DEFAULT_REGISTRATION
                      name: env
                - name: DISABLE_ECHO_TEST
                  valueFrom:
                    configMapKeyRef:
                      key: DISABLE_ECHO_TEST
                      name: env
                - name: DISABLE_SOUND_ALONE
                  valueFrom:
                    configMapKeyRef:
                      key: DISABLE_SOUND_ALONE
                      name: env
                - name: DISABLE_SOUND_MUTED
                  valueFrom:
                    configMapKeyRef:
                      key: DISABLE_SOUND_MUTED
                      name: env
                - name: DISABLE_VIDEO_PREVIEW
                  valueFrom:
                    configMapKeyRef:
                      key: DISABLE_VIDEO_PREVIEW
                      name: env
                - name: DOMAIN
                  valueFrom:
                    configMapKeyRef:
                      key: DOMAIN
                      name: env
                - name: ENABLE_COTURN
                  valueFrom:
                    configMapKeyRef:
                      key: ENABLE_COTURN
                      name: env
                - name: ENABLE_GOOGLE_CALENDAR_BUTTON
                  valueFrom:
                    configMapKeyRef:
                      key: ENABLE_GOOGLE_CALENDAR_BUTTON
                      name: env
                - name: ENABLE_GREENLIGHT
                  valueFrom:
                    configMapKeyRef:
                      key: ENABLE_GREENLIGHT
                      name: env
                - name: ENABLE_HTTPS_PROXY
                  valueFrom:
                    configMapKeyRef:
                      key: ENABLE_HTTPS_PROXY
                      name: env
                - name: ENABLE_LEARNING_DASHBOARD
                  valueFrom:
                    configMapKeyRef:
                      key: ENABLE_LEARNING_DASHBOARD
                      name: env
                - name: ENABLE_RECORDING
                  valueFrom:
                    configMapKeyRef:
                      key: ENABLE_RECORDING
                      name: env
                - name: ETHERPAD_API_KEY
                  valueFrom:
                    configMapKeyRef:
                      key: ETHERPAD_API_KEY
                      name: env
                - name: EXTERNAL_IPv4
                  valueFrom:
                    configMapKeyRef:
                      key: EXTERNAL_IPv4
                      name: env
                - name: EXTERNAL_IPv6
                  valueFrom:
                    configMapKeyRef:
                      key: EXTERNAL_IPv6
                      name: env
                - name: FSESL_PASSWORD
                  valueFrom:
                    configMapKeyRef:
                      key: FSESL_PASSWORD
                      name: env
                - name: HELP_URL
                  valueFrom:
                    configMapKeyRef:
                      key: HELP_URL
                      name: env
                - name: LDAP_AUTH
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_AUTH
                      name: env
                - name: LDAP_BASE
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_BASE
                      name: env
                - name: LDAP_BIND_DN
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_BIND_DN
                      name: env
                - name: LDAP_FILTER
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_FILTER
                      name: env
                - name: LDAP_METHOD
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_METHOD
                      name: env
                - name: LDAP_PASSWORD
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_PASSWORD
                      name: env
                - name: LDAP_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_PORT
                      name: env
                - name: LDAP_ROLE_FIELD
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_ROLE_FIELD
                      name: env
                - name: LDAP_SERVER
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_SERVER
                      name: env
                - name: LDAP_UID
                  valueFrom:
                    configMapKeyRef:
                      key: LDAP_UID
                      name: env
                - name: LISTEN_ONLY_MODE
                  valueFrom:
                    configMapKeyRef:
                      key: LISTEN_ONLY_MODE
                      name: env
                - name: MAINTENANCE_MODE
                  valueFrom:
                    configMapKeyRef:
                      key: MAINTENANCE_MODE
                      name: env
                - name: MAINTENANCE_WINDOW
                  valueFrom:
                    configMapKeyRef:
                      key: MAINTENANCE_WINDOW
                      name: env
                - name: NUMBER_OF_BACKEND_NODEJS_PROCESSES
                  valueFrom:
                    configMapKeyRef:
                      key: NUMBER_OF_BACKEND_NODEJS_PROCESSES
                      name: env
                - name: NUMBER_OF_FRONTEND_NODEJS_PROCESSES
                  valueFrom:
                    configMapKeyRef:
                      key: NUMBER_OF_FRONTEND_NODEJS_PROCESSES
                      name: env
                - name: NUMBER_OF_ROWS
                  valueFrom:
                    configMapKeyRef:
                      key: NUMBER_OF_ROWS
                      name: env
                - name: OAUTH2_REDIRECT
                  valueFrom:
                    configMapKeyRef:
                      key: OAUTH2_REDIRECT
                      name: env
                - name: OFFICE365_HD
                  valueFrom:
                    configMapKeyRef:
                      key: OFFICE365_HD
                      name: env
                - name: OFFICE365_KEY
                  valueFrom:
                    configMapKeyRef:
                      key: OFFICE365_KEY
                      name: env
                - name: OFFICE365_SECRET
                  valueFrom:
                    configMapKeyRef:
                      key: OFFICE365_SECRET
                      name: env
                - name: PAGINATION_NUMBER
                  valueFrom:
                    configMapKeyRef:
                      key: PAGINATION_NUMBER
                      name: env
                - name: POSTGRESQL_SECRET
                  valueFrom:
                    configMapKeyRef:
                      key: POSTGRESQL_SECRET
                      name: env
                - name: RAILS_SECRET
                  valueFrom:
                    configMapKeyRef:
                      key: RAILS_SECRET
                      name: env
                - name: RECORDING_MAX_AGE_DAYS
                  valueFrom:
                    configMapKeyRef:
                      key: RECORDING_MAX_AGE_DAYS
                      name: env
                - name: RELATIVE_URL_ROOT
                  valueFrom:
                    configMapKeyRef:
                      key: RELATIVE_URL_ROOT
                      name: env
                - name: REMOVE_OLD_RECORDING
                  valueFrom:
                    configMapKeyRef:
                      key: REMOVE_OLD_RECORDING
                      name: env
                - name: ROOM_FEATURES
                  valueFrom:
                    configMapKeyRef:
                      key: ROOM_FEATURES
                      name: env
                - name: SECRET_KEY_BASE
                - name: SHARED_SECRET
                  valueFrom:
                    configMapKeyRef:
                      key: SHARED_SECRET
                      name: env
                - name: SIP_IP_ALLOWLIST
                  valueFrom:
                    configMapKeyRef:
                      key: SIP_IP_ALLOWLIST
                      name: env
                - name: SMTP_AUTH
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_AUTH
                      name: env
                - name: SMTP_DOMAIN
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_DOMAIN
                      name: env
                - name: SMTP_PASSWORD
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_PASSWORD
                      name: env
                - name: SMTP_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_PORT
                      name: env
                - name: SMTP_SENDER
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_SENDER
                      name: env
                - name: SMTP_SERVER
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_SERVER
                      name: env
                - name: SMTP_STARTTLS_AUTO
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_STARTTLS_AUTO
                      name: env
                - name: SMTP_USERNAME
                  valueFrom:
                    configMapKeyRef:
                      key: SMTP_USERNAME
                      name: env
                - name: SOUNDS_LANGUAGE
                  valueFrom:
                    configMapKeyRef:
                      key: SOUNDS_LANGUAGE
                      name: env
                - name: STUN_IP
                  valueFrom:
                    configMapKeyRef:
                      key: STUN_IP
                      name: env
                - name: STUN_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: STUN_PORT
                      name: env
                - name: TURN_SECRET
                  valueFrom:
                    configMapKeyRef:
                      key: TURN_SECRET
                      name: env
                - name: TURN_SERVER
                  valueFrom:
                    configMapKeyRef:
                      key: TURN_SERVER
                      name: env
                - name: WELCOME_FOOTER
                  valueFrom:
                    configMapKeyRef:
                      key: WELCOME_FOOTER
                      name: env
                - name: WELCOME_MESSAGE
                  valueFrom:
                    configMapKeyRef:
                      key: WELCOME_MESSAGE
                      name: env
              image: bigbluebutton/greenlight:v2
              name: greenlight
              ports:
                - containerPort: 80
              resources: {}
              volumeMounts:
                - mountPath: /usr/src/app/log
                  name: greenlight-claim0
          restartPolicy: Always
          volumes:
            - name: greenlight-claim0
              persistentVolumeClaim:
                claimName: greenlight-claim0
    status: {}
  - apiVersion: v1
    data:
      ALLOW_GREENLIGHT_ACCOUNTS: "true"
      AUTO_SHARE_WEBCAM: "false"
      BREAKOUTROOM_LIMIT: "8"
      CHAT_ENABLED: "true"
      CHAT_START_CLOSED: "false"
      CLIENT_TITLE: BigBlueButton
      DEFAULT_PRESENTATION: ./mod/nginx/default.pdf
      DEFAULT_REGISTRATION: open
      DISABLE_ECHO_TEST: "false"
      DISABLE_SOUND_ALONE: "false"
      DISABLE_SOUND_MUTED: "false"
      DISABLE_VIDEO_PREVIEW: "false"
      DOMAIN: meet.emorphis.com
      ENABLE_COTURN: "true"
      ENABLE_GOOGLE_CALENDAR_BUTTON: ""
      ENABLE_GREENLIGHT: "true"
      ENABLE_HTTPS_PROXY: "true"
      ENABLE_LEARNING_DASHBOARD: "true"
      ENABLE_RECORDING: "true"
      ETHERPAD_API_KEY: 9NMx2ZHGyU3wO8oTch8oXlYJLTJuJqjWEikZ4eFy
      EXTERNAL_IPv4: 49.36.179.132
      EXTERNAL_IPv6: 2405:201:402e:2031:a00:27ff:fe0b:89cc
      FSESL_PASSWORD: E572qp8EWndOPfLwSVbM0RcoxUFoxZdCsc50sCJg
      HELP_URL: https://docs.bigbluebutton.org/greenlight/gl-overview.html
      LDAP_AUTH: ""
      LDAP_BASE: ""
      LDAP_BIND_DN: ""
      LDAP_FILTER: ""
      LDAP_METHOD: ""
      LDAP_PASSWORD: ""
      LDAP_PORT: ""
      LDAP_ROLE_FIELD: ""
      LDAP_SERVER: ""
      LDAP_UID: ""
      LISTEN_ONLY_MODE: "true"
      MAINTENANCE_MODE: "false"
      MAINTENANCE_WINDOW: ""
      NUMBER_OF_BACKEND_NODEJS_PROCESSES: "2"
      NUMBER_OF_FRONTEND_NODEJS_PROCESSES: "2"
      NUMBER_OF_ROWS: "25"
      OAUTH2_REDIRECT: ""
      OFFICE365_HD: ""
      OFFICE365_KEY: ""
      OFFICE365_SECRET: ""
      PAGINATION_NUMBER: "25"
      POSTGRESQL_SECRET: HunwLeoQsZycyOEQvML6XETPwsYGmwUuIAe7Jofl
      RAILS_SECRET: a689674db0cc03cf3e7380e23aef586aea8e9679feec5d717f949531c870fb9aab12946a9f4d783872f00d5633c7890c
      RECORDING_MAX_AGE_DAYS: "1"
      RELATIVE_URL_ROOT: /b
      REMOVE_OLD_RECORDING: "true"
      ROOM_FEATURES: mute-on-join,require-moderator-approval,anyone-can-start,all-join-moderator
      SHARED_SECRET: IGGIuB42dzsGtkha36p6F0HEiHHowtSOgMt91JiA
      SIP_IP_ALLOWLIST: ""
      SMTP_AUTH: ""
      SMTP_DOMAIN: meet.emorphis.com
      SMTP_PASSWORD: ""
      SMTP_PORT: ""
      SMTP_SENDER: ""
      SMTP_SERVER: ""
      SMTP_STARTTLS_AUTO: ""
      SMTP_USERNAME: ""
      SOUNDS_LANGUAGE: en-us-callie
      STUN_IP: 49.36.179.132
      STUN_PORT: "3478"
      TURN_SECRET: LIPZPaU5SYJ4MGFZOfHXcQPKIW0M5KbC
      TURN_SERVER: turns:meet.emorphis.com:5349?transport=tcp
      WELCOME_FOOTER: This server is running <a href='https://docs.bigbluebutton.org/'' target='_blank'><u>BigBlueButton</u></a>.
      WELCOME_MESSAGE: Welcome to <b>%%CONFNAME%%</b>!<br><br>For help on using BigBlueButton see these (short) <a href='https://www.bigbluebutton.org/html5' target='_blank'><u>tutorial videos</u></a>.<br><br>To join the audio bridge click the phone button.  Use a headset to avoid causing background noise for others.
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: greenlight-env
      name: env
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: greenlight-claim0
      name: greenlight-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: html5-backend-1
      name: html5-backend-1
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: html5-backend-1
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: html5-backend-1
        spec:
          containers:
            - env:
                - name: AUTO_SHARE_WEBCAM
                  value: "false"
                - name: BBB_HTML5_ROLE
                  value: backend
                - name: BREAKOUTROOM_LIMIT
                  value: "8"
                - name: CHAT_ENABLED
                  value: "true"
                - name: CHAT_START_CLOSED
                  value: "false"
                - name: CLIENT_TITLE
                - name: DEV_MODE
                - name: DISABLE_ECHO_TEST
                  value: "false"
                - name: DISABLE_VIDEO_PREVIEW
                  value: "false"
                - name: DOMAIN
                - name: ETHERPAD_API_KEY
                - name: INSTANCE_ID
                  value: "1"
                - name: LISTEN_ONLY_MODE
                  value: "true"
                - name: PORT
                  value: "4000"
              image: bbb-html5
              name: html5-backend-1
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: html5-backend-2
      name: html5-backend-2
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: html5-backend-2
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: html5-backend-2
        spec:
          containers:
            - env:
                - name: AUTO_SHARE_WEBCAM
                  value: "false"
                - name: BBB_HTML5_ROLE
                  value: backend
                - name: BREAKOUTROOM_LIMIT
                  value: "8"
                - name: CHAT_ENABLED
                  value: "true"
                - name: CHAT_START_CLOSED
                  value: "false"
                - name: CLIENT_TITLE
                - name: DEV_MODE
                - name: DISABLE_ECHO_TEST
                  value: "false"
                - name: DISABLE_VIDEO_PREVIEW
                  value: "false"
                - name: DOMAIN
                - name: ETHERPAD_API_KEY
                - name: INSTANCE_ID
                  value: "2"
                - name: LISTEN_ONLY_MODE
                  value: "true"
                - name: PORT
                  value: "4001"
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-html5:2.4.x
              name: html5-backend-2
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: html5-frontend-1
      name: html5-frontend-1
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: html5-frontend-1
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: html5-frontend-1
        spec:
          containers:
            - env:
                - name: AUTO_SHARE_WEBCAM
                  value: "false"
                - name: BBB_HTML5_ROLE
                  value: frontend
                - name: BREAKOUTROOM_LIMIT
                  value: "8"
                - name: CHAT_ENABLED
                  value: "true"
                - name: CHAT_START_CLOSED
                  value: "false"
                - name: CLIENT_TITLE
                - name: DEV_MODE
                - name: DISABLE_ECHO_TEST
                  value: "false"
                - name: DISABLE_VIDEO_PREVIEW
                  value: "false"
                - name: DOMAIN
                - name: ETHERPAD_API_KEY
                - name: INSTANCE_ID
                  value: "1"
                - name: LISTEN_ONLY_MODE
                  value: "true"
                - name: PORT
                  value: "4100"
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-html5:2.4.x
              name: html5-frontend-1
              resources: {}
              volumeMounts:
                - mountPath: /html5-static
                  name: html5-static
          restartPolicy: Always
          volumes:
            - name: html5-static
              persistentVolumeClaim:
                claimName: html5-static
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: html5-static
      name: html5-static
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: html5-frontend-2
      name: html5-frontend-2
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: html5-frontend-2
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: html5-frontend-2
        spec:
          containers:
            - env:
                - name: AUTO_SHARE_WEBCAM
                  value: "false"
                - name: BBB_HTML5_ROLE
                  value: frontend
                - name: BREAKOUTROOM_LIMIT
                  value: "8"
                - name: CHAT_ENABLED
                  value: "true"
                - name: CHAT_START_CLOSED
                  value: "false"
                - name: CLIENT_TITLE
                - name: DEV_MODE
                - name: DISABLE_ECHO_TEST
                  value: "false"
                - name: DISABLE_VIDEO_PREVIEW
                  value: "false"
                - name: DOMAIN
                - name: ETHERPAD_API_KEY
                - name: INSTANCE_ID
                  value: "2"
                - name: LISTEN_ONLY_MODE
                  value: "true"
                - name: PORT
                  value: "4101"
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-html5:2.4.x
              name: html5-frontend-2
              resources: {}
              volumeMounts:
                - mountPath: /html5-static
                  name: html5-static
          restartPolicy: Always
          volumes:
            - name: html5-static
              persistentVolumeClaim:
                claimName: html5-static
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: https-proxy
      name: https-proxy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: https-proxy
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: https-proxy
        spec:
          containers:
            - env:
                - name: ALLOWED_DOMAINS
              image: valian/docker-nginx-auto-ssl
              name: https_proxy
              resources: {}
              volumeMounts:
                - mountPath: /etc/nginx/conf.d/fullchain.pem
                  name: https-proxy-claim0
                - mountPath: /etc/nginx/conf.d/privkey.pem
                  name: https-proxy-claim1
                - mountPath: /etc/nginx/conf.d/bbb-docker.conf
                  name: https-proxy-claim2
          restartPolicy: Always
          volumes:
            - name: https-proxy-claim0
              persistentVolumeClaim:
                claimName: https-proxy-claim0
            - name: https-proxy-claim1
              persistentVolumeClaim:
                claimName: https-proxy-claim1
            - name: https-proxy-claim2
              persistentVolumeClaim:
                claimName: https-proxy-claim2
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: https-proxy-claim0
      name: https-proxy-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: https-proxy-claim1
      name: https-proxy-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: https-proxy-claim2
      name: https-proxy-claim2
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: jodconverter
      name: jodconverter
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: jodconverter
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: jodconverter
        spec:
          containers:
            - image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-jodconverter:2.4.x
              name: jodconverter
              resources:
                limits:
                  memory: "536870912"
              volumeMounts:
                - mountPath: /tmp
                  name: jodconverter-tmpfs0
          restartPolicy: Always
          volumes:
            - emptyDir:
                medium: Memory
              name: jodconverter-tmpfs0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: kurento
      name: kurento
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: kurento
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: kurento
        spec:
          containers:
            - env:
                - name: GST_DEBUG
                  value: 3,Kurento*:4,kms*:4,KurentoWebSocketTransport:5
                - name: KMS_MAX_PORT
                  value: "32768"
                - name: KMS_MIN_PORT
                  value: "24577"
                - name: KMS_NETWORK_INTERFACES
                - name: KMS_STUN_IP
                - name: KMS_STUN_PORT
              image: kurento/kurento-media-server:6.16
              name: kurento
              resources: {}
              volumeMounts:
                - mountPath: /var/kurento
                  name: vol-kurento
          restartPolicy: Always
          volumes:
            - name: vol-kurento
              persistentVolumeClaim:
                claimName: vol-kurento
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      name: mongodb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mongodb
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: mongodb
        spec:
          containers:
            - args:
                - mongod
                - --config
                - /etc/mongod.conf
                - --oplogSize
                - "8"
                - --replSet
                - rs0
                - --noauth
              image: mongo:4.4
              livenessProbe:
                exec:
                  command:
                    - bash -c "if mongo --eval 'quit(db.runCommand({ ping':' 1 }).ok ? 0 ':' 2)'; then exit 0; fi; exit 1;"
              name: mongodb
              resources: {}
              volumeMounts:
                - mountPath: /etc/mongod.conf
                  name: mongodb-claim0
                - mountPath: /docker-entrypoint-initdb.d/init-replica.sh
                  name: mongodb-claim1
                - mountPath: /data/configdb
                  name: mongodb-tmpfs0
                - mountPath: /data/db
                  name: mongodb-tmpfs1
          restartPolicy: Always
          volumes:
            - name: mongodb-claim0
              persistentVolumeClaim:
                claimName: mongodb-claim0
            - name: mongodb-claim1
              persistentVolumeClaim:
                claimName: mongodb-claim1
            - emptyDir:
                medium: Memory
              name: mongodb-tmpfs0
            - emptyDir:
                medium: Memory
              name: mongodb-tmpfs1
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb-claim0
      name: mongodb-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb-claim1
      name: mongodb-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
      name: nginx
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: nginx
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: nginx
        spec:
          containers:
            - image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-nginx:2.4.x
              name: nginx
              resources: {}
              volumeMounts:
                - mountPath: /var/bigbluebutton
                  name: bigbluebutton
                - mountPath: /html5-static
                  name: html5-static
                  readOnly: true
                - mountPath: /www/default.pdf
                  name: nginx-claim2
          restartPolicy: Always
          volumes:
            - name: bigbluebutton
              persistentVolumeClaim:
                claimName: bigbluebutton
            - name: html5-static
              persistentVolumeClaim:
                claimName: html5-static
                readOnly: true
            - name: nginx-claim2
              persistentVolumeClaim:
                claimName: nginx-claim2
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nginx-claim2
      name: nginx-claim2
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: periodic
      name: periodic
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: periodic
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: periodic
        spec:
          containers:
            - env:
                - name: ENABLE_RECORDING
                - name: RECORDING_MAX_AGE_DAYS
                - name: REMOVE_OLD_RECORDING
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-periodic:2.4.x
              name: periodic
              resources: {}
              volumeMounts:
                - mountPath: /var/run/docker.sock
                  name: periodic-claim0
                - mountPath: /var/bigbluebutton
                  name: bigbluebutton
                - mountPath: /var/log/bigbluebutton
                  name: periodic-tmpfs0
          restartPolicy: Always
          volumes:
            - name: periodic-claim0
              persistentVolumeClaim:
                claimName: periodic-claim0
            - name: bigbluebutton
              persistentVolumeClaim:
                claimName: bigbluebutton
            - emptyDir:
                medium: Memory
              name: periodic-tmpfs0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: periodic-claim0
      name: periodic-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
      name: postgres
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: postgres
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: postgres
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                  value: greenlight
                - name: POSTGRES_PASSWORD
                  value: password
                - name: POSTGRES_USER
                  value: postgres
              image: postgres:12-alpine
              livenessProbe:
                exec:
                  command:
                    - pg_isready -U postgres
                failureThreshold: 5
                periodSeconds: 1000
                timeoutSeconds: 5000
              name: postgres
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: postgres-claim0
          restartPolicy: Always
          volumes:
            - name: postgres-claim0
              persistentVolumeClaim:
                claimName: postgres-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: postgres-claim0
      name: postgres-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: recordings
      name: recordings
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: recordings
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: recordings
        spec:
          containers:
            - env:
                - name: DOMAIN
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-recordings:2.4.x
              name: recordings
              resources: {}
              volumeMounts:
                - mountPath: /var/bigbluebutton
                  name: bigbluebutton
                - mountPath: /var/freeswitch/meetings
                  name: vol-freeswitch
                - mountPath: /var/kurento
                  name: vol-kurento
                - mountPath: /var/log/bigbluebutton
                  name: recordings-tmpfs0
                - mountPath: /tmp
                  name: recordings-tmpfs1
          restartPolicy: Always
          volumes:
            - name: bigbluebutton
              persistentVolumeClaim:
                claimName: bigbluebutton
            - name: vol-freeswitch
              persistentVolumeClaim:
                claimName: vol-freeswitch
            - name: vol-kurento
              persistentVolumeClaim:
                claimName: vol-kurento
            - emptyDir:
                medium: Memory
              name: recordings-tmpfs0
            - emptyDir:
                medium: Memory
              name: recordings-tmpfs1
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: redis
        spec:
          containers:
            - image: redis:6.2-alpine
              livenessProbe:
                exec:
                  command:
                    - redis-cli
                    - ping
                failureThreshold: 30
                periodSeconds: 1
                timeoutSeconds: 3
              name: redis
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: webrtc-sfu
      name: webrtc-sfu
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: webrtc-sfu
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes_image.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/bbb-net: "true"
            io.kompose.service: webrtc-sfu
        spec:
          containers:
            - env:
                - name: CLIENT_HOST
                  value: 0.0.0.0
                - name: ESL_IP
                  value: host.docker.internal
                - name: ESL_PASSWORD
                  value: ClueCon
                - name: FREESWITCH_IP
                  value: host.docker.internal
                - name: FREESWITCH_SIP_IP
                - name: KURENTO_NAME
                  value: kurento
                - name: LOG_LEVEL
                  value: info
                - name: NODE_CONFIG
                  value: '{"kurento":[{"ip":"","url":"ws://kurento:8888/kurento"}]}'
                - name: REDIS_HOST
                  value: redis
              image: registry.emorphis.com/amit.agrawal/samvaad-docker/bbb-webrtc-sfu:2.4.x
              name: webrtc-sfu
              ports:
                - containerPort: 3008
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

